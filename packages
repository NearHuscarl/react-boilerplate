yarn add babel-core babel-cli babel-loader
yarn add babel-plugin-transform-class-properties
yarn add babel-plugin-transform-object-rest-spread
yarn add babel-polyfill # support wider range of (old) browsers

https://github.com/webpack-contrib/extract-text-webpack-plugin/issues/701
yarn add webpack webpack-cli webpack-dev-server
yarn add extract-text-webpack-plugin@next
yarn add file-loader # load font-awesome
yarn add -D css-hot-loader # auto reload css/scss when failed in webpack watch

yarn add validator
yarn add react react-dom
yarn add react-modal
yarn add css-loader
yarn add sass-loader node-sass
yarn add normalize.css
yarn add react-router-dom
yarn add history
yarn add redux react-redux redux-thunk
yarn add -D redux-devtools-extension
yarn add uuid
yarn add momentjs react-dates react-addons-shallow-compare
yarn add jest redux-mock-store
yarn add enzyme enzyme-adapter-react-16 enzyme-to-json raf
yarn add express
yarn add numeral
yarn add firebase
yarn add cross-env dotenv
yarn add font-awesome
yarn add react-fontawesome


heroku-cli
--
git push heroku master
heroku login
heroku create <name>
heroku open
heroku logs
heroku config:set KEY=value
heroku config:unset KEY=value

firebase rules
---
{
	"rules": {
		".read": false,
		".write": false,
		"users": {
			"$user_id": {
				".read": "$user_id === auth.uid",
				".write": "$user_id === auth.uid",
				"expenses": {
					"$expense_id": {
						".validate": "newData.hasChildren(['description', 'note', 'amount', 'createdAt'])",
						"description": {
							".validate": "newData.isString() && newData.val().length > 0"  
						},
						"note": {
							".validate": "newData.isString()"
						},
						"amount": {
							".validate": "newData.isNumber()"
						},
						"createdAt": {
							".validate": "newData.isNumber()"
						},
						"$other": {
							".validate": false
						}
					},
				},
				"$other": {
					".validate": false
				}
			}
		}
	}
}
